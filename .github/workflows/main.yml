name: Test Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "pypy3.9", "pypy3.10"]
        exclude:
          - python-version: "pypy3.9"
          - python-version: "pypy3.10"

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      POSTGRES_DB: swen732
      POSTGRES_USER: swen732
      POSTGRES_PASSWORD: swen732
      PYTHON_RUN: python

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r server/requirements.txt

      - name: Copy config files
        run: |
          cp server/config/github-credentials.yml server/config/db.yml

      - name: Check Python version
        run: ${{ env.PYTHON_RUN }} --version

      - name: Start server
        run: ${{ env.PYTHON_RUN }} server/src/server.py &

      - name: Wait for server to start
        run: sleep 3

      - name: Run unit tests
        run: ${{ env.PYTHON_RUN }} -m unittest -v
        working-directory: server

      - name: Run coverage
        run: |
          coverage run -m unittest discover tests
          coverage report -m
        working-directory: server
